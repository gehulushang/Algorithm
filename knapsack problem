

//01背包
using namespace std;
const int maxn = 100; // 物品最大件数
const int maxv = 1000; //V的上限

int w[maxn],c[maxn],dp[maxn];
 

int main(int argc, char** argv) {
    int n,V;
	cin>>n>>V;
	for(int i = 1;i<=n;i++){
		cin>>w[i];
		
	}	
	for(int i = 1;i<=n;i++){
		cin>>c[i];
		
	}
	//边界
	for(int v = 0;v<=V;v++){
		dp[v] = 0;
		
	} 
	for(int i = 1;i<=n;i++){
		for(int v = V;v>=w[i];v--){            //逆向枚举
			dp[v] = max(dp[v],dp[v-w[i]] + c[i]);
			
		}
	}
	int maxc = 0;
	for(int v = 0;v<=V;v++){
		if(dp[v] > maxc){
			maxc = dp[v];
			
		}
	}
	cout<<maxc;
	
	return 0;
}

//完全背包
#include <iostream>
#define V 500
using namespace std;
int weight[20 + 1];
int value[20 + 1];
int f[V + 1];
int max(int a, int b) {
    return a > b ? a : b;
}
int main() {
    int n, m;
    cout << "请输入物品个数:";
    cin >> n;
    cout << "请分别输入" << n << "个物品的重量和价值:" << endl; 
    for (int i = 1; i <= n; i++) {
        cin >> weight[i] >> value[i];
    }
    cout << "请输入背包容量:";
    cin >> m;
    for (int i = 1; i <= n; i++) {
        for (int j = weight[i]; j <= m; j++) {  // 正向枚举
            f[j] = max(f[j], f[j - weight[i]] + value[i]);
        }
    }
    cout << "背包能放的最大价值为:" << f[m] << endl;
}


