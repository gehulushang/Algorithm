const int maxv = 1000;   //最大顶点数
const int INF = 99999999;  //无穷

int n, G[maxv][maxv];        // n 为顶点数
bool vis[maxv] = {false};           // 如果顶点i已被访问，则 vis[i] = true
 
void BFS(int u){
	queue<int> q;
	q.push(u);
	vis[u] = true;        //标记u已加入过队列 
	
	while(!q.empty()){
		int u = q.front();
		q.pop();
		for(int v = 0;v<n;v++){
			if(vis[v]==false&&G[u][v]!=INF){       //如果v未被访问，且u可以到达v 
			    q.push(v);              //将v入队 
				vis[v] = true;         // 标记v已加入过队列 
			}
		}
	}
} 

void BFSTrave(){
	for(int u = 0;u<n;u++){
		if(vis[u]==false){
			BFS(u);            
		}
	}
} 
