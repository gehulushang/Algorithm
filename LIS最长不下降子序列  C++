#include <stdio.h> 
#include <iostream>
#include <vector>
#include<cmath>
#include<queue>
#include<algorithm>
#include <iomanip>
using namespace std;


//最长不下降子序列 
//O(n^2)算法 
int Func1(vector<int> v){
	
	int dp[(int)v.size()] = {1},ans = 1;
	for(int i = 1;i<(int)v.size() ;i++){
		for(int j = 0;j<i;j++){
			
			if(v[i]>=v[j]){
				dp[i] = max(dp[i],dp[j]+1); 
			}
			
		}
		ans = max(ans,dp[i]);
	}
	cout<<ans;
	return ans;
}

//O(nlogn)算法 
int Func2(vector<int> v){
	vector<int> vec;
	
	for(int i = 0;i<(int)v.size() ;i++){
		if(i==0){
			vec.push_back(v[0]);
			 
		}else{
			if(v[i]>=vec[vec.size() -1]){
				vec.push_back(v[i]);
				 
			}else{
				*upper_bound(vec.begin(), vec.end(), v[i]) = v[i];
			}
		}
	}
	for(int i = 0;i<(int)vec.size() ;i++){
		cout<<vec[i]<<" ";
		
	}
	cout<<endl;
	cout<<"len == "<<vec.size() <<endl;
	
	return vec.size();
}

int main(){
	
	int n,x;
	vector<int> v;
	cin>>n;
	for(int i = 0;i<n;i++){
		cin>>x;
		v.push_back(x);
	} 
	Func1(v);
	Func2(v);
	return 0;
	
}

